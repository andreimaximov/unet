#include <unet/dev/tap.hpp>

using namespace unet;

// TODO(amaximov): Use Ethernet + ARP header structs to build request and
// validate reply when they are ready.
static const std::uint8_t kArpReq[] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x11, 0x22, 0x33, 0x44,
    0x55, 0x08, 0x06, 0x00, 0x01, 0x08, 0x00, 0x06, 0x04, 0x00, 0x01,
    0x06, 0x11, 0x22, 0x33, 0x44, 0x55, 0x0A, 0xFF, 0xFF, 0x66, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0xFF, 0xFF, 0x65};

int main() {
  Tap tap{"tap0"};

  if (tap.maxTransmissionUnit() != 1500) {
    std::exit(1);
  }

  while (tap.send(kArpReq, sizeof(kArpReq)) != sizeof(kArpReq)) {
  }

  std::uint8_t buf[1024];

  while (tap.read(buf, sizeof(buf)) == 0) {
  }
}
